/*
 * This file was generated by the Gradle 'init' task.
 *
 * The settings file is used to specify which projects to include in your build.
 *
 * Detailed information about configuring a multi-project build in Gradle can be found
 * in the user manual at https://docs.gradle.org/7.6.2/userguide/multi_project_builds.html
 */

buildscript {
    repositories {
        mavenCentral()

        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.13'
    }
}

rootProject.name = 'maven-deploy-runtime'

include 'proto'
project(':proto').projectDir = file('../git-submodule/upstream/proto')

include ':transpiler'
project(':transpiler').projectDir = file('../git-submodule/upstream/transpiler')

include ':testutil'
project(':testutil').projectDir = file('../git-submodule/upstream/testutil')

include ':runtime'
project(':runtime').projectDir = file('../git-submodule/upstream/runtime')


gradle.allprojects {

    apply plugin: 'maven-publish'

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    pluginManager.withPlugin('java') {
        java {
//            withJavadocJar()
            withSourcesJar()
        }

        if (project.name == 'proto') {
            sourceSets.main.java.srcDirs += ['build/generated/source/proto/main/java']
            tasks.named("sourcesJar").configure { dependsOn("generateProto") }
        }
        if (project.name == 'transpiler') {
            tasks.named("sourcesJar").configure { dependsOn("generateGrammarSource") }
        }

        publishing {
            publications.create("maven${project.name}", MavenPublication) {
                from components.java
                groupId = "${groupIdPrefix}.com.google.cloud.verticals.foundations.dataharmonization"
            }
        }

        tasks.withType(Javadoc) {
            // https://docs.gradle.org/current/dsl/org.gradle.api.tasks.javadoc.Javadoc.html#org.gradle.api.tasks.javadoc.Javadoc:failOnError
            // https://stackoverflow.com/questions/35435173/prevent-javadoc-from-failing-gradle-build#answer-59892052
            failOnError false
        }
    }

}

buildCache {
    local {
        directory = new File(rootDir, 'build_cache')
    }
}
